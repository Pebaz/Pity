<head>
	<link rel=stylesheet href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.4/css/bulma.min.css" />
	<link rel=stylesheet href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.0/animate.min.css" />
	<link rel=stylesheet href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" crossorigin="anonymous">
	<script src="/static/js/modal.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/ace.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-solarized_light.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/mode-html.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-ambiance.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-chaos.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-chrome.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-clouds_midnight.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-clouds.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-cobalt.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-crimson_editor.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-dawn.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-dracula.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-dreamweaver.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-eclipse.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-github.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-gob.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-gruvbox.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-idle_fingers.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-iplastic.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-katzenmilch.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-kr_theme.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-kuroir.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-merbivore_soft.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-merbivore.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-mono_industrial.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-monokai.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-pastel_on_dark.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-solarized_dark.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-sqlserver.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-terminal.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-textmate.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-tomorrow_night_blue.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-tomorrow_night_bright.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-tomorrow_night_eighties.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-tomorrow_night.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-tomorrow.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-twilight.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-vibrant_ink.js" async></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.3/theme-xcode.js" async></script>
	<script>
		var GENERATE_FRAGMENT_URL = true;

		function showPreview() {
			showItem('preview');
			var page = document.getElementById('preview-pane');
			page.srcdoc = editor.getValue();
			page.onload = () => {
				document.getElementById('preview-title').innerHTML = page.contentDocument.title;
			}
		}

		function loadFile(filePath) {
			var result = null;
			var xmlhttp = new XMLHttpRequest();
			xmlhttp.open('GET', filePath + "?_=" + new Date().getTime(), false);
			xmlhttp.send();
			if (xmlhttp.status == 200) {
				result = xmlhttp.responseText;
			}
			return result;
		}

		function animateCSS(elementID, animationName, callback) {
			const node = document.getElementById(elementID)
			node.classList.add('animated', animationName)

			function handleAnimationEnd() {
				node.classList.remove('animated', animationName)
				node.removeEventListener('animationend', handleAnimationEnd)

				if (typeof callback === 'function') callback()
			}

			node.addEventListener('animationend', handleAnimationEnd)
		}

		function clearURLBOX() {
			document.getElementById('url-box').value = '';
			document.getElementById('url-success').style.display = "none";
		}
	</script>
</head>
<body>
	<div class=columns>
		<div class="column is-6 is-offset-3">
			
			<h1 class=title>Pity Editor</h1>
			
			<!-- Byte Count Field and Theme Drop-Down -->
			<div class="field is-horizontal">
				<div class=field-body>
					<div class="field has-addons has-addons-right">
						<div class=control>
							<button id=char-count class="button is-static">0/2000 Bytes</button>
						</div>
						<div class="control has-icons-right is-expanded">
							<input class=input type=text id=url-box onpaste="decodeURL()" />
							<span class="icon is-small is-right has-text-success">
								<i id=url-success class="fas fa-check" style="display: none"></i>
							</span>
						</div>
						<div class=control>
							<div class=select>
								<select onchange="GENERATE_FRAGMENT_URL = (this.options[this.selectedIndex].value) == 'true'">
									<option value=true>Fragment</option>
									<option value=false>URL</option>
								</select>
							</div>
						</div>
					</div>
					<div class="field is-grouped">
						<div class=control>
							<button class="button is-primary" onclick="genURL()">Generate URL</button>
						</div>					
						<div class=control>
							<button class="button" onclick="copy()">Copy</button>
						</div>
						<div class=control>
							<button class="button" onclick="clearURLBOX()">Clear</button>
						</div>
						<div class=control>
							<button class="button" onclick="showPreview()">Preview</button>
						</div>
					</div>
				</div>
			</div>




			<div class="field is-horizontal">
				<div class=field-body>
					<div class="field is-grouped">

						<!-- Code Theme -->
						<div class="control has-icons-left">
							<div class="select is-info">
								<select name=lines onchange="editor.setTheme(this.options[this.selectedIndex].value); editor.find('^^^')">
									<option value="ace/theme/ambiance">Ambiance</option>
									<option value="ace/theme/chaos">Chaos</option>
									<option value="ace/theme/chrome">Chrome</option>
									<option value="ace/theme/clouds_midnight">Clouds Midnight</option>
									<option value="ace/theme/clouds">Clouds</option>
									<option value="ace/theme/cobalt">Cobalt</option>
									<option value="ace/theme/crimson_editor">Crimson Editor</option>
									<option value="ace/theme/dawn">Dawn</option>
									<option value="ace/theme/dracula">Dracula</option>
									<option value="ace/theme/dreamweaver">Dreamweaver</option>
									<option value="ace/theme/eclipse">Eclipse</option>
									<option value="ace/theme/github">Github</option>
									<option value="ace/theme/gob">Gob</option>
									<option value="ace/theme/gruvbox">Gruvbox</option>
									<option value="ace/theme/idle_fingers">Idle Fingers</option>
									<option value="ace/theme/iplastic">Iplastic</option>
									<option value="ace/theme/katzenmilch">Katzenmilch</option>
									<option value="ace/theme/kr_theme">Kr Theme</option>
									<option value="ace/theme/kuroir">Kuroir</option>
									<option value="ace/theme/merbivore_soft">Merbivore Soft</option>
									<option value="ace/theme/merbivore">Merbivore</option>
									<option value="ace/theme/mono_industrial">Mono Industrial</option>
									<option value="ace/theme/monokai">Monokai</option>
									<option value="ace/theme/pastel_on_dark">Pastel On Dark</option>
									<option value="ace/theme/solarized_light">Solarized Light</option>
									<option value="ace/theme/solarized_dark">Solarized Dark</option>
									<option value="ace/theme/sqlserver">Sqlserver</option>
									<option value="ace/theme/terminal">Terminal</option>
									<option value="ace/theme/textmate">Textmate</option>
									<option value="ace/theme/tomorrow_night_blue">Tomorrow Night Blue</option>
									<option value="ace/theme/tomorrow_night_bright">Tomorrow Night Bright</option>
									<option value="ace/theme/tomorrow_night_eighties">Tomorrow Night Eighties</option>
									<option value="ace/theme/tomorrow_night">Tomorrow Night</option>
									<option value="ace/theme/tomorrow" selected>Tomorrow</option>
									<option value="ace/theme/twilight">Twilight</option>
									<option value="ace/theme/vibrant_ink">Vibrant Ink</option>
									<option value="ace/theme/xcode">Xcode</option>
								</select>
							</div>
							<span class="icon is-left">
								<i class="fas fa-code"></i>
							</span>
						</div>

						<!-- Code Template -->
						<div class="control has-icons-left">
							<div class="select is-info">
								<select name=lines onchange="editor.setValue(loadFile(this.options[this.selectedIndex].value)); editor.find('^^^')">
									{% for default_file, default_title in defaults %}
										<option value="{{ default_file }}">{{ default_title }}</option>
									{% endfor %}
								</select>
							</div>
							<span class="icon is-left">
								<i class="fas fa-align-justify"></i>
							</span>
						</div>



					</div>
				</div>
			</div>




		</div>
	</div>

	<div class=columns>
		<div class="column is-6 is-offset-3">

			<!-- Code Editor -->
			<pre id="editor"></pre>
			<script>
				function copy()
				{
					var url_box = document.getElementById('url-box');
					url_box.select();
					document.execCommand("copy");
				}

				function poll(fn, timeout, interval)
				{
					var endTime = Number(new Date()) + (timeout || 2000);
					interval = interval || 100;

					var checkCondition = function(resolve, reject)
					{
						// If the condition is met, we're done! 
						var result = fn();
						if(result) {
							resolve(result);
						}
						else if (Number(new Date()) < endTime) {
							setTimeout(checkCondition, interval, resolve, reject);
						}
						else {
							reject(new Error('timed out for ' + fn + ': ' + arguments));
						}
					};
					return new Promise(checkCondition);
				}

				var editor = ace.edit("editor");
				var html = `{{ html }}`;
				editor.setValue(html);
				editor.find('^^^');
				editor.session.setMode("ace/mode/html");
				editor.setOptions({
					maxLines: Infinity
				});

				window.setInterval(() => {
					fetch("/bit-length", {
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify({'value': editor.getValue()})
					}).then(response => {
						response.text().then(function (text) {
							var count = document.getElementById('char-count');

							if (GENERATE_FRAGMENT_URL)
							{
								count.innerHTML = `${text}/2000 Bytes`;
							}
							else
							{
								count.innerHTML = `<strike>${text}/2000 Bytes</strike>`;
							}

							if (JSON.parse(text) > 2000)
							{
								count.classList.add('has-text-danger');
							}
							else
							{
								count.classList.remove('has-text-danger');
							}
						})
					});
				}, 2000);

				function genURL()
				{
					fetch("/compress", {
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify({
							'value': editor.getValue(),
							'GENERATE_FRAGMENT_URL' : GENERATE_FRAGMENT_URL
						})
					}).then(response => {
						response.text().then(function (text) {
							document.getElementById('url-box').value = text

							// Show the success checkmark
							var success = document.getElementById('url-success');
							success.style.display = "inline-flex";
							animateCSS('url-success', 'bounceIn', () => {
								animateCSS('url-success', 'fadeOut', () => {
									success.style.display = "none";
								});
							});
						})
					})
				}

				function decodeURL()
				{
					var url = new URL(document.getElementById('url-box').value);
					if (url.hash.length == 0)
					{
						var data = url.pathname.slice(1);
					}
					else if (url.pathname.length == 1)
					{
						var data = url.hash;
					}
					else
					{
						var data = '';
					}

					fetch("/render", {
						method: "POST",
						headers: {
							"Content-Type": "application/json"
						},
						body: JSON.stringify({'value': data})
					}).then(response => {
						response.text().then(function (text) {
							editor.setValue(text, -1)
						})
					})
				}
			</script>
		</div>
	</div>


	<!-- Modal containing preview -->
	<div id=preview class="animated fadeIn modal">
		<div class=modal-background></div>
		<div id=preview-card class="animated zoomIn faster modal-card">
			<header class=modal-card-head>
				<p id=preview-title class="modal-card-title">Preview</p>
				<button class=delete aria-label=close onclick="closeModal('preview')"></button>
			</header>
			<section class=modal-card-body>
				
				<!-- Content -->

				<iframe id=preview-pane style="display: inline-flex; width: 100%; height: 100%; margin: 0"></iframe>

				<!-- /Content -->

			</section>
			<footer class=modal-card-foot>
				{# <button class="button" onclick="closeModal('preview')">Close</button> #}
			</footer>
		</div>
	</div>

</body>